---
# tasks file for slurm

- name: install epel repository
  yum: name=epel-release state=present

- name: install required packages
  yum: name={{ item }} state=present
  with_items:
    - libselinux-python
    - gcc
    - munge
    - munge-libs
    - munge-devel
    - hwloc
    - pam-devel
    - ncurses-devel
    - gtk2-devel
    - perl-devel
    - perl-CPAN

- name: create munge key
  shell: create-munge-key
  args:
    creates: /etc/munge/munge.key
  notify: restart munge

- name: enable munge service
  service: name=munge enabled=yes

- name: check if already installed
  stat: path={{ slurm_prefix }}/bin
  register: slurm_bin
  changed_when: slurm_bin.stat.exists == False

- include: install.yml
  when: slurm_bin.stat.exists == False

#- name: copy slurm startup script
#  template: src=init.d.slurm.j2 dest=/etc/init.d/slurm owner=root group=root mode=0700
#  when: ansible_distribution == 'CentOS' and ansible_distribution_major_version == "6"

- name: copy slurmctl startup script
  template: src=slurmctld.service.j2 dest=/usr/lib/systemd/system/slurmctld.service owner=root group=root mode=0700
  when: ansible_distribution == 'CentOS' and ansible_distribution_major_version == "7"

- name: copy slurm startup script
  template: src=slurmd.service.j2 dest=/usr/lib/systemd/system/slurmd.service owner=root group=root mode=0700
  when: ansible_distribution == 'CentOS' and ansible_distribution_major_version == "7"

- name: create config directory
  file: path={{ slurm_prefix }}/etc state=directory owner=root group=root mode=0755


- name: copy slurm config example
  copy: src={{ item}} dest={{ slurm_prefix }}/etc owner=root group=root mode=0644
  with_items:
    - slurm.conf.example
    - slurm.conf.bluegene
    - slurm.conf.fakecluster
    - slurm.conf.linux
    - slurm.conf.dev
    - slurm.conf


- name: copy slurmdbd config example
  copy: src=slurmdbd.conf.example dest={{ slurm_prefix }}/etc owner=root group=root mode=0644

#- name: create slurm group
  #group: name=slurm gid=105 state=present

#- name: create slurm user
  #user: name=slurm uid=105 group=slurm createhome=no home={{ slurm_prefix }} shell=/bin/nologin state=present

- name: create slurm directories
  file: path={{ item }} state=directory owner={{ slurm_user }} mode=755
  with_items:
    - /var/spool/slurmd
    - /var/log/slurm

- name: create slurm var files
  file: path={{ item }} state=touch owner={{ slurm_user }} group={{ slurm_user }} mode=755
  with_items:
    - /var/spool/slurmd
    - /var/log/slurm/slurmctld.log
    - /var/log/slurm/slurmctld.pid
    - /var/log/slurm/slurmd.log
    - /var/log/slurm/slurmd.pid

- name: enable services
  systemd:
    name: slurmctld
    enabled: yes
    state: started

- name: enable service
  systemd:
    name: slurmd
    enabled: yes
    state: started

- name: set path with systemwide bashrc
  lineinfile:
    dest=/etc/bashrc
    line={{ item }}
    state=present
  with_items:
   - "alias j='. jump.sh'"
   - "alias sr='systemctl start'"
   - "alias sq='systemctl stop'"
   - "alias st='systemctl status'"
   - "alias se='systemctl enable'"
   - "alias sd='systemctl disable'"
   - "PATH=$PATH:{{ slurm_prefix }}/sbin"
   - "PATH=$PATH:{{ slurm_prefix }}/bin"
   - "export PATH"
